/*----------  Absolute Dimensions  ----------*/

@mixin absolute-position($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

@mixin absolute-right-top($right: 0, $top: 0) {
  position: absolute;
  right: $right;
  top: $top;
}

@mixin absolute-right-bottom($right: 0, $bottom: 0) {
  position: absolute;
  right: $left;
  bottom: $bottom;
}

@mixin absolute-left-bottom($left: 0, $bottom: 0) {
  position: absolute;
  left: $left;
  bottom: $bottom;
}

@mixin absolute-left-top($left: 0, $top: 0) {
  position: absolute;
  left: $left;
  top: $top;
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin absolute-center($top: 50%, $left: 50%) {
  position: absolute;
  top: $top !important;
  left: $left !important;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}

@mixin full-cover() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/*----------  Pseudo  ----------*/

@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

/*----------  Opacity  ----------*/

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

/*----------  Box Sizing  ----------*/

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
  -moz-box-sizing: $box-model;
  box-sizing: $box-model;
}

/*----------  Resets  ----------*/

@mixin no-space() {
  margin: 0;
  padding: 0;
}

@mixin total-reset() {
  border: none;
  outline: none;
}

@mixin reset-appearance {
  -webkit-appearance: none;
  appearance: none;
}

/*----------  Sizing  ----------*/

@mixin fullscreen($isImportant: false) {
  @if ($isImportant) {
    width: 100% !important;
    height: 100% !important;
  } @else {
    width: 100%;
    height: 100%;
  }
}

@mixin width-height($width: auto, $height: auto) {
  width: $width;
  height: $height;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + "%");
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

/*----------  Fonts  ----------*/

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + ".eot");
    src: url($file-name + ".eot?#iefix") format("embedded-opentype"),
    url($file-name + ".woff") format("woff"),
    url($file-name + ".ttf") format('truetype'),
    url($file-name + ".svg##{$font-name}") format("svg");
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin font-full($font-family: false, $size: false, $colour: false, $weight: false, $lh: false) {
  @if $font-family {
    font-family: $font-family;
  }
  @if $size {
    font-size: $size;
  }
  @if $colour {
    color: $colour;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: $lh;
  }
}

/*----------  Inputs  ----------*/

@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

/*----------  Text  ----------*/

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/*----------  Clearfix  ----------*/

@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/*----------  Media Queries  ----------*/

$breakpoints: (
  "phone": 400px,
  "phone-wide": 480px,
  "phablet": 560px,
  "tablet-small": 640px,
  "tablet": 768px,
  "tablet-wide": 1024px,
  "desktop": 1248px,
  "desktop-wide": 1440px
);

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

/*----------  Full Border Radius  ----------*/

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;
}

/*----------  Single Side Border Radius  ----------*/

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  background-clip: padding-box;
}

@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

/*----------  Transitions  ----------*/

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

/*----------  Animations  ----------*/

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($args) {
  -webkit-animation: #{$args};
  -moz-animation: #{$args};
  -ms-animation: #{$args};
  -o-animation: #{$args};
  animation: #{$args};
}

/*----------  Scroll Bar  ----------*/

@mixin scrollbar($size, $primary, $secondary: white, $radius: 0) {
  ::-webkit-scrollbar {
    width: $size;
  }

  ::-webkit-scrollbar-thumb {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background: $primary;
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
  }

  ::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background: $secondary;
  }

  ::-webkit-scrollbar-thumb:window-inactive {
    background: $primary;
  }

  body {
    scrollbar-face-color: $primary;
    scrollbar-track-color: $secondary;
  }
}

/*----------  Events  ----------*/

@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/*----------  Card Shadow  ----------*/

@mixin card-shadow($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card-shadow`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}
